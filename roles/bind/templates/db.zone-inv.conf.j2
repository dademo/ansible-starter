{#- vim: set tabstop=2 shiftwidth=2 expandtab filetype=jinja2 : #}
; Generated by Ansible on {{ '%Y-%m-%d %H:%M:%S' | strftime }}

{# Default TTL to 300 seconds == 1 hour -#}
{%- set _TTL = zone_def.TTL | int | default(3600) -%}
$TTL    {{ _TTL | int }}

@       IN      SOA     {{ zone_def.zone }}. {{ zone_def.admin | default("admin." + zone_def.zone) }}. (
{{ '%30s          ; Serial' | format('%Y%m%d%H' | strftime) }}
{{ '%30s          ; Refresh' | format(zone_def.refresh | default(_TTL) | int) }}
{{ '%30s          ; Retry' | format((zone_def.retry | default(_TTL / 10) | int)) }}
{{ '%30s          ; Expire' | format(zone_def.expire | default(_TTL) | int) }}
{{ '%30s )        ; Negative Cache TTL' | format(zone_def.negative_cache_ttl | default(_TTL / 10) | int) }}
;
{% if zone_def.primary_dns_name is defined %}
@       IN      NS      {{ zone_def.primary_dns_name }}
{% endif %}
;
{% set _len = ((32 - (zone_def.network | ansible.netcommon.ipaddr('prefix'))) / 8)  |
                round(method='floor')                                               |
                int
%}
{% for _entry in zone_def.entries | sort(attribute='name') | selectattr('type', 'equalto', 'A') %}
{% set _ip = (_entry.target.split('.') | reverse | list)[:_len] | join('.') %}
{% set _target = (zone_def.zone in _entry.name) | ternary(
                    _entry.name,
                    (_entry.name[-1:] == '.') | ternary(_entry.name, _entry.name + '.') + zone_def.zone + '.'
                  )
%}
{{ '%-15s     IN     PTR       %s' | format(_ip, _target) }}
{% endfor %}
;
{% for _entry in zone_def.rev_entries | default([]) | sort(attribute='ip') %}
{{ '%-15s     IN     PTR       %s' | format(_entry.ip, _entry.target) }}
{% endfor %}
